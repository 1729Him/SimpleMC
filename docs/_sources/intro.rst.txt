==================
Introduction
==================

Requirements
-------------

This code runs both in Python 2x and 3x. However, we highly recommend Python 3x.

You need the following scientific modules:

.. code-block:: bash
   
   sudo pip install numpy matplotlib scipy dynesty emcee


In addition, MCEvidence is necessary to estimate the bayesian evidence in the Metropolis-Hastings sampler:

.. code-block:: bash
   
   pip install git+https://github.com/yabebalFantaye/MCEvidence

For use Artificial Neural Networks with multinest and ellipsoidal sampling (as in pyBAMBI), you need to install:

.. code-block:: bash
   
   pip install tensorflow keras

For use genetic algorithms in order to maximize the Likelihood function:

.. code-block:: bash
   
   pip install deap


If you want to use the full options to plot:

.. code-block:: bash
   
   pip install corner getdist

.. note:: All in one copy-paste line: 

   .. code-block:: bash
   
      pip install numpy matplotlib scipy tensorflow keras dynesty corner getdist deap git+https://github.com/yabebalFantaye/MCEvidence



Quick Start
------------

In this section we show a basic use of SimpleMC. 

1) First you need to create an ``ini file`` or use the default ``baseConfig.ini`` as follows:

.. code-block::

        [custom]

        chainsdir = chains
        
        model = owaCDM
        
        datasets = BBAO+HD+UnionSN+Planck

        analyzer = genetic


.. note::

	* model options:
		* LCDM, LCDMasslessnu, nuLCDM, NeffLCDM, noradLCDM, nuoLCDM, nuwLCDM, oLCDM, wCDM, waCDM, owCDM, owaCDM, JordiCDM, WeirdCDM, TLight, StepCDM, Spline, PolyCDM, fPolyCDM, Decay, Decay01, Decay05, EarlyDE, EarlyDE_rd_DE, SlowRDE, sline


	* analyzer options: 
		* mcmc, nested, emcee, MaxLikeAnalyzer, genetic, ga_deap


   	* data options: 
   		* HD, BBAO, GBAO, GBAO_no6dF, CMASS, LBAO, LaBAO, LxBAO, MGS, Planck, WMAP, PlRd, WRd, PlDa, PlRdx10, CMBW, SN, SNx10, UnionSN, RiessH0, 6dFGS, dline


2) Then in *test.py*, please put the path of the *ini file*:

.. code-block:: python
   
   from DriverMC import DriverMC
   
   fileConfig = "/home/isidro/SuperMC_/baseConfig.ini"
   D = DriverMC(fileConfig)



3) For last, you can run in the *SimpleMC* directory:

.. code-block:: bash
   
   $ python3 test.py

You can see your outputs in the *chains* directory.

* See the `plots <plotters.html>`_ .


General structure
------------------

.. figure:: /img/simplemc.png







